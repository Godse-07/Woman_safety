name: Android CI/CD

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'
    paths:
      - '**'
    tags-ignore:
      - 'v*'

jobs:
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Check for file changes
        id: check
        run: |
          if git diff --quiet HEAD^ HEAD; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check_changes
    if: needs.check_changes.outputs.should_run == 'true'
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'
          architecture: x64
          cache: true

      - name: Configure Firebase API keys
        env:
          FIREBASE_ANDROID_API_KEY: 'AIzaSyDTEBK9IiAsZyh7Lgj0Tp0l6skmVvCHgbU'
          FIREBASE_ANDROID_APP_ID: '1:585920310721:android:d953f6809ef58fd889d340'
          FIREBASE_MESSAGING_SENDER_ID: '585920310721'
          FIREBASE_PROJECT_ID: 'woman-233fc'
          FIREBASE_STORAGE_BUCKET: 'woman-233fc.appspot.com'
        run: |
          mkdir -p lib
          cat > lib/firebase_options.dart <<EOL
          // Generated Firebase configuration
          import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
          import 'package:flutter/foundation.dart' show defaultTargetPlatform, kIsWeb, TargetPlatform;

          class DefaultFirebaseOptions {
            static FirebaseOptions get currentPlatform {
              if (kIsWeb) {
                throw UnsupportedError('Unsupported platform');
              }
              switch (defaultTargetPlatform) {
                case TargetPlatform.android:
                  return android;
                default:
                  throw UnsupportedError(
                    'DefaultFirebaseOptions are not supported for this platform.',
                  );
              }
            }

            static const FirebaseOptions android = FirebaseOptions(
              apiKey: '$FIREBASE_ANDROID_API_KEY',
              appId: '$FIREBASE_ANDROID_APP_ID',
              messagingSenderId: '$FIREBASE_MESSAGING_SENDER_ID',
              projectId: '$FIREBASE_PROJECT_ID',
              storageBucket: '$FIREBASE_STORAGE_BUCKET',
            );
          }
          EOL

      - name: Install dependencies
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: flutter pub get

      - name: Build Android Release APK
        run: flutter build apk --release

      # Using the downloaded service account file
      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: '1:585920310721:android:d953f6809ef58fd889d340'
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          groups: testers
          file: build/app/outputs/flutter-apk/app-release.apk
          releaseNotes: "New release from CI/CD"

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}
          